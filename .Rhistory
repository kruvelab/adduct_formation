plot_grid(NORMAN_adduct_plot, NORMAN_adduct_plot_small,
labels = c("a)", "b)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_higher_plot
NORMAN_adduct_plot =
ggplot(data = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()) +
geom_histogram(mapping = aes(x = fraction),
color= basecolor,
alpha = 0.5) +
labs(x = expression(paste("Fraction of isomers predited to form [M+Na]"^'+')), y = "count of molecular formulas") +
my_theme
NORMAN_adduct_plot
NORMAN_higher_plot =
plot_grid(NORMAN_adduct_plot, NORMAN_adduct_plot_small,
labels = c("a)", "b)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_higher_plot
NORMAN_adduct_plot =
ggplot(data = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()) +
geom_histogram(mapping = aes(x = fraction),
color = "#33658A",
alpha = 0.5) +
labs(x = expression(paste("Fraction of isomers predited to form [M+Na]"^'+')), y = "count of molecular formulas") +
my_theme
NORMAN_adduct_plot
NORMAN_adduct_plot =
ggplot(data = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()) +
geom_histogram(mapping = aes(x = fraction),
fill = "#33658A",
alpha = 0.5) +
labs(x = expression(paste("Fraction of isomers predited to form [M+Na]"^'+')), y = "count of molecular formulas") +
my_theme
NORMAN_adduct_plot
NORMAN_adduct_plot =
ggplot(data = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()) +
geom_histogram(mapping = aes(x = fraction),
color = basecolor,
fill = "#33658A",
alpha = 0.5) +
labs(x = expression(paste("Fraction of isomers predited to form [M+Na]"^'+')), y = "count of molecular formulas") +
my_theme
NORMAN_adduct_plot
ggsave("adduct_formation_NORMAN.svg",
width = 8,
height = 8,
units = "cm")
NORMAN_higher_plot =
plot_grid(NORMAN_adduct_plot, NORMAN_adduct_plot_small,
labels = c("a)", "b)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_higher_plot
View(NORMAN_short)
summary = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()
View(summary)
NORMAN_adduct_plot =
ggplot(data = NORMAN_pred %>%
mutate(M_Na_pred_round = case_when(
M_Na_pred > 0.50 ~ 1,
TRUE ~ 0
)) %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()) +
geom_histogram(mapping = aes(x = fraction),
color = basecolor,
fill = "#33658A",
alpha = 0.5) +
labs(x = expression(paste("Fraction of isomers predited to form [M+Na]"^'+')), y = "count of molecular formulas") +
my_theme
NORMAN_adduct_plot
ggsave("adduct_formation_NORMAN.svg",
width = 8,
height = 8,
units = "cm")
NORMAN_short = NORMAN_pred %>%
mutate(M_Na_pred_round = case_when(
M_Na_pred > 0.51 ~ 1,
TRUE ~ 0
))
NORMAN_adduct_plot_small =
ggplot(data = NORMAN_short %>%
filter(Monoiso_Mass > 180.04 & Monoiso_Mass < 180.05)) +
geom_point(mapping = aes(x = Monoiso_Mass,
y = M_Na_pred,
color = factor(M_Na_pred_round),
alpha = factor(M_Na_pred_round))) +
geom_segment(mapping = aes(x = 180.0423,
y = 0.32,
xend = 180.043,
yend = 0.28),
color = "#33658A") +
annotate(geom = 'text',
x = 180.043,
y = 0.26,
label = expression(paste("caffeic acid")),
parse = TRUE,
colour = "#33658A",
family = font,
size = 3.5) +
geom_segment(mapping = aes(x = 180.0423,
y = 0.74,
xend = 180.043,
yend = 0.78),
color = "#F26419") +
annotate(geom = 'text',
x = 180.043,
y = 0.85,
label = expression(paste("monomethyl phthalate")),
parse = TRUE,
colour = "#F26419",
family = font,
size = 3.5) +
xlim(180.041, 180.044) +
#scale_x_continuous(breaks = seq(180.0418, 180.0432, 0.0005))+
scale_color_manual(values = c("#33658A", "#F26419")) +
scale_alpha_manual(values = c(1, 1)) +
ylim(0,1) +
labs(x = "monoisotopic mass (Da)", y = "probability of adduct formation") +
my_theme
NORMAN_adduct_plot_small
NORMAN_higher_plot =
plot_grid(NORMAN_adduct_plot, NORMAN_adduct_plot_small,
labels = c("a)", "b)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_higher_plot
summary = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()
View(summary)
NORMAN_adduct_plot =
ggplot(data = NORMAN_pred %>%
mutate(M_Na_pred_round = case_when(
M_Na_pred > 0.50 ~ 1,
TRUE ~ 0
)) %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred_round)) %>%
ungroup()) +
geom_histogram(mapping = aes(x = fraction),
color = basecolor,
fill = "#33658A",
alpha = 0.5) +
labs(x = expression(paste("Fraction of isomers predited to form [M+Na]"^'+')), y = "count of molecular formulas") +
my_theme
NORMAN_adduct_plot
ggsave("adduct_formation_NORMAN.svg",
width = 8,
height = 8,
units = "cm")
NORMAN_short = NORMAN_pred %>%
mutate(M_Na_pred_round = case_when(
M_Na_pred > 0.51 ~ 1,
TRUE ~ 0
))
NORMAN_adduct_plot_small =
ggplot(data = NORMAN_short %>%
filter(Monoiso_Mass > 180.04 & Monoiso_Mass < 180.05)) +
geom_point(mapping = aes(x = Monoiso_Mass,
y = M_Na_pred,
color = factor(M_Na_pred_round),
alpha = factor(M_Na_pred_round))) +
geom_segment(mapping = aes(x = 180.0423,
y = 0.32,
xend = 180.043,
yend = 0.28),
color = "#33658A") +
annotate(geom = 'text',
x = 180.043,
y = 0.26,
label = expression(paste("caffeic acid")),
parse = TRUE,
colour = "#33658A",
family = font,
size = 3.5) +
geom_segment(mapping = aes(x = 180.0423,
y = 0.74,
xend = 180.043,
yend = 0.78),
color = "#F26419") +
annotate(geom = 'text',
x = 180.043,
y = 0.85,
label = expression(paste("monomethyl phthalate")),
parse = TRUE,
colour = "#F26419",
family = font,
size = 3.5) +
xlim(180.041, 180.044) +
#scale_x_continuous(breaks = seq(180.0418, 180.0432, 0.0005))+
scale_color_manual(values = c("#33658A", "#F26419")) +
scale_alpha_manual(values = c(1, 1)) +
ylim(0,1) +
labs(x = "monoisotopic mass (Da)", y = "probability of adduct formation") +
my_theme
NORMAN_adduct_plot_small
NORMAN_higher_plot =
plot_grid(NORMAN_adduct_plot, NORMAN_adduct_plot_small,
labels = c("a)", "b)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_higher_plot
summary = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred)) %>%
ungroup()
View(summary)
summary = NORMAN_pred %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred_round)) %>%
ungroup()
View(summary)
summary = NORMAN_short %>%
group_by(Monoiso_Mass) %>%
summarize(fraction = mean(M_Na_pred_round)) %>%
ungroup()
View(summary)
3826/9247
(9247-6410)/9247
1-0.4137558-0.3068022
library(plotly)
library(ggplot2)
library(readxl)
library(cowplot)
library(tidyverse)
data_path <- "C:/Users/annel/OneDrive - Kruvelab/Kruvelab/Research/Supervision/Riccardo"
setwd(data_path)
data_path <- "C:/Users/annel/OneDrive - Kruvelab/Kruvelab/Research/Supervision/old/Riccardo"
setwd(data_path)
adduct_nontarget = read_excel("cIMS_adducts.xlsx",
sheet = "isomers_LC_181")
mass_monophtahlate = adduct_nontarget %>%
select(mz_monophthalate, height_monophthalate) %>%
rename(mz = mz_monophthalate)
mass_caffeic = adduct_nontarget %>%
select(mz_caffeic, height_caffeic) %>%
rename(mz = mz_caffeic)
mass_background = adduct_nontarget %>%
select(mz_background, height_bacground) %>%
rename(mz = mz_background)
mass_monophtahlate = mass_monophtahlate %>%
left_join(mass_background) %>%
mutate(height_monophthalate = case_when(
(height_monophthalate - height_bacground) > 0 ~ (height_monophthalate - height_bacground),
TRUE ~ 0
)) %>%
mutate(height_monophthalate = case_when(
mz > 204 ~ 0,
TRUE ~ height_monophthalate
)) %>%
mutate(height_monophthalate = case_when(
height_monophthalate < 3500 ~ 0,
TRUE ~ height_monophthalate
))
mass_caffeic = mass_caffeic %>%
left_join(mass_background) %>%
mutate(height_caffeic = case_when(
(height_caffeic - height_bacground) > 0 ~ (height_caffeic - height_bacground),
TRUE ~ 0
)) %>%
mutate(height_caffeic = case_when(
mz > 204 ~ 0,
TRUE ~ height_caffeic
)) %>%
mutate(height_caffeic = case_when(
height_caffeic < 40000 ~ 0,
TRUE ~ height_caffeic
))
proton <- expression('[M+H]'^{'+'})
naatrium <- expression('[M+Na]'^{'+'})
plot_mass_monophthalate =
ggplot(data = mass_monophtahlate) +
geom_line(mapping = aes(x = mz,
y = height_monophthalate)) +
annotate(geom = 'text', x = 149, y = 150000, label = "fragment", parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
annotate(geom = 'text', x = 163, y = 720000, label = "fragment", parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
annotate(geom = 'text', x = 203, y = 200000, label = naatrium, parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
annotate(geom = 'text', x = 204, y = 720000, label = expression(paste('peak B')), parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
labs(x = "m/z", y = "Intensity") +
xlim(120, 210) +
ylim(0, 750000) +
my_theme +
theme(axis.text.y = element_blank(),
aspect.ratio = 0.4)
plot_mass_monophthalate
plot_mass_caffeic =
ggplot(data = mass_caffeic) +
geom_line(mapping = aes(x = mz,
y = height_caffeic)) +
annotate(geom = 'text', x = 163, y = 2500000, label = "fragment", parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
annotate(geom = 'text', x = 181, y = 700000, label = proton, parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
annotate(geom = 'text', x = 204, y = 2500000, label = expression(paste('peak A')), parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
labs(x = "m/z", y = "Intensity") +
xlim(120, 210)+
ylim(0, 2700000) +
my_theme +
theme(axis.text.y = element_blank(),
aspect.ratio = 0.4)
plot_mass_caffeic
mass_spectra =
plot_grid(plot_mass_caffeic, plot_mass_monophthalate,
nrow = 2,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
mass_spectra
plot_chrom =
ggplot(data = adduct_nontarget) +
geom_line(mapping = aes(x = t,
y = Int),
color = basecolor) +
annotate(geom = 'text', x = 4.9, y = 580000, label = expression(paste('peak A')), parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
annotate(geom = 'text', x = 6, y = 300000, label = expression(paste('peak B')), parse = TRUE, colour = "#14213d", family = font, size = 3.5) +
labs(x = "time (min)", y = "Intensity") +
xlim(0, 10)+
my_theme +
theme(axis.text.y = element_blank())
plot_chrom
NORMAN_lower_plot =
plot_grid(plot_chrom, mass_spectra,
labels = c("c)", "d)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_lower_plot
plot_grid(NORMAN_higher_plot, NORMAN_lower_plot,
nrow = 2,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
ggsave("Fig_NORMAN_211201.png",
width = 16,
height = 16/534*490,
units = "cm")
NORMAN_adduct_plot_small =
ggplot(data = NORMAN_short %>%
filter(Monoiso_Mass > 180.04 & Monoiso_Mass < 180.05)) +
geom_point(mapping = aes(x = Monoiso_Mass,
y = M_Na_pred,
color = factor(M_Na_pred_round),
alpha = factor(M_Na_pred_round))) +
geom_segment(mapping = aes(x = 180.0423,
y = 0.32,
xend = 180.043,
yend = 0.28),
color = "#33658A") +
annotate(geom = 'text',
x = 180.043,
y = 0.22,
label = expression(paste("caffeic acid")),
parse = TRUE,
colour = "#33658A",
family = font,
size = 3.5) +
geom_segment(mapping = aes(x = 180.0423,
y = 0.74,
xend = 180.043,
yend = 0.78),
color = "#F26419") +
annotate(geom = 'text',
x = 180.043,
y = 0.92,
label = expression(paste("monomethyl phthalate")),
parse = TRUE,
colour = "#F26419",
family = font,
size = 3.5) +
xlim(180.041, 180.044) +
#scale_x_continuous(breaks = seq(180.0418, 180.0432, 0.0005))+
scale_color_manual(values = c("#33658A", "#F26419")) +
scale_alpha_manual(values = c(1, 1)) +
ylim(0,1) +
labs(x = "monoisotopic mass (Da)", y = "probability of adduct formation") +
my_theme
NORMAN_adduct_plot_small
NORMAN_higher_plot =
plot_grid(NORMAN_adduct_plot, NORMAN_adduct_plot_small,
labels = c("a)", "b)"),
nrow = 1,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
NORMAN_higher_plot
plot_grid(NORMAN_higher_plot, NORMAN_lower_plot,
nrow = 2,
label_size = fontsize,
label_fontfamily = font,
label_colour = basecolor,
label_fontface = "plain")
ggsave("Fig_NORMAN_211201.png",
width = 16,
height = 16/534*490,
units = "cm")
1-.4137558-0.3068022
View(NORMAN_pred)
SMILES = tibble("SMILES" = c("CCOc1cc(ccc1C(=O)OC)NC(=O)C", "c1cc(ccc1N)S(=O)(=O)Nc1cncc(n1)Cl"))
source("code/predict_adduct_formation.R")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation")
source("code/predict_adduct_formation.R")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation/code")
source("predict_adduct_formation.R")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation")
source("predict_adduct_formation.R")
source("predict_adduct_formation.R")
SMILES = tibble("SMILES" = c("CCOc1cc(ccc1C(=O)OC)NC(=O)C", "c1cc(ccc1N)S(=O)(=O)Nc1cncc(n1)Cl"))
SMILES %>%
mutate(test = predict_adduct_formation(SMILES))
SMIELS = "CCOc1cc(ccc1C(=O)OC)NC(=O)C"
SMILES = "CCOc1cc(ccc1C(=O)OC)NC(=O)C"
source("code/PubChem_fingerprint_calculation.R")
source("code/calculating_bond_properties_from_graph.R")
classifier_svmPoly = readRDS("models/classifier_svmPoly.rds")
bond_descriptors_this_SMILES = bond_descriptors(SMILES)
pubchem_descriptors_this_SMILES = pubchem_fingerprint(SMILES)
bond_descriptors_this_SMILES %>%
left_join(pubchem_descriptors_this_SMILES)
source("predict_adduct_formation.R")
SMILES = tibble("SMILES" = c("CCOc1cc(ccc1C(=O)OC)NC(=O)C", "c1cc(ccc1N)S(=O)(=O)Nc1cncc(n1)Cl"))
SMILES %>%
mutate(test = predict_adduct_formation(SMILES))
SMILES = "CCOc1cc(ccc1C(=O)OC)NC(=O)C"
classifier_svmPoly = readRDS("models/classifier_svmPoly.rds")
bond_descriptors_this_SMILES = bond_descriptors(SMILES)
pubchem_descriptors_this_SMILES = pubchem_fingerprint(SMILES)
Bond_descriptors_summary <- bond_descriptors_this_SMILES %>%
left_join(pubchem_descriptors_this_SMILES)
View(Bond_descriptors_summary)
Bond_descriptors_summary = Bond_descriptors_summary %>%
mutate(M_Na_pred = predict(classifier_svmPoly, newdata = Bond_descriptors_summary, type = "prob")[,2])
View(Bond_descriptors_summary)
Bond_descriptors_summary$M_Na_pred
source("predict_adduct_formation.R")
SMILES = tibble("SMILES" = c("CCOc1cc(ccc1C(=O)OC)NC(=O)C", "c1cc(ccc1N)S(=O)(=O)Nc1cncc(n1)Cl"))
SMILES %>%
mutate(test = predict_adduct_formation(SMILES))
SMILES %>%
group_by(SMILES) %>%
mutate(test = predict_adduct_formation(SMILES)) %>%
ungroup()
library(tidyverse)
library(caret)
library(caTools)
library(gmodels)
library(mccr)
library(yardstick)
source('code/my_theme.R')
classifier_svmPoly = readRDS("models/classifier_svmPoly.rds")
validation = read_delim("data/validation/ac8b04567_si_002_CID.csv",
delim = ",",
col_names = TRUE)
validation = validation %>%
spread(key = Adduct, value = CCS)
validation = validation %>%
mutate(M_Na = case_when(
is.na(`[M+Na]`) ~ 0,
TRUE ~ 1
)) %>%
select(Name, M_Na, PubChemCID, ExactMass)
validation_fingerprints = read_delim("data/validation/PubChem_fingerprints_bond_properties_validation.csv",
delim = ",",
col_names = TRUE)
validation = validation %>%
left_join(validation_fingerprints) %>%
na.omit()
validation = validation %>%
mutate(M_Na_pred_prob = predict(classifier_svmPoly, newdata = validation, type = "prob")[,2]) %>%
mutate(M_Na_pred = case_when(
M_Na_pred_prob > 0.5 ~ 1,
TRUE ~ 0
))
write_delim(validation,
"data/validation/Predicted_adduct_formation_validation_set.csv",
delim = ",")

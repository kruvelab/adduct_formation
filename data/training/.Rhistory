library(tidyverse)
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation/code")
source("calculating_bond_properties_from_graph.R")
dataset = tibble(SMILES = c("ccccccN"))
Bond_descriptors_summary <- tibble()
for (smiles in dataset$SMILES) {
print(smiles)
bond_descriptors_SMILES <- as_tibble(t(as.integer(bond_descriptors(smiles))))
bond_descriptors_SMILES <- bond_descriptors_SMILES %>%
mutate(SMILES = smiles)
Bond_descriptors_summary <- Bond_descriptors_summary %>%
bind_rows(bond_descriptors_SMILES)
}
View(Bond_descriptors_summary)
Bond_descriptors_summary <- Bond_descriptors_summary %>%
rename(min_dist_2O = V1,
max_dist_2O = V2,
min_dist_carbonyl = V3,
max_dist_carbonyl = V4,
max_path_non_rotatabale_bonds_carbonyl = V5,
min_path_non_rotatabale_bonds_carbonyl = V6,
max_path_non_rotatabale_bonds_2O = V7,
min_path_non_rotatabale_bonds_2O = V8)
library(tidyverse)
library(rcdklibs)
library(rcdk)
suppressMessages(
list <- read_delim("C:/Users/annel/OneDrive - Kruvelab/RapToxMix/data_csv for coding/CalculatedFingerprints/pubchem_fingerprints_names.txt", delim = ",") %>%
mutate(row = as.numeric(rowPC)) %>%
select(row, description_PC)
)
pubchem_fingerprint = function(smiles) {
mol2 <- parse.smiles(smiles)[[1]]
pubchem_fingerprints <- get.fingerprint(mol2,
type = "pubchem")
table <- as.data.frame(pubchem_fingerprints@bits) %>%
mutate(fp = 1) %>%
mutate(fp = as.numeric(fp))
table = table %>%
rename("row" = `pubchem_fingerprints@bits`)
suppressMessages(
datarow <- list %>%
left_join(table) %>%
select(-row)
)
datarow = datarow %>%
mutate(fp = case_when(
is.na(fp) ~ 0,
TRUE ~ fp)) %>%
rename(SMILES = description_PC) %>%
filter(row_number() > 263) %>%
mutate(SMILES = str_remove_all(SMILES, "~")) %>%
filter(str_count(SMILES, "-\\[#1\\]") == 0) %>%
filter(str_count(SMILES, "\\[#1\\]-") == 0) %>%
filter(str_count(SMILES, "-H") == 0) %>%
filter(str_count(SMILES, "\\[H\\]") == 0) %>%
filter(str_count(SMILES, "\\(H\\)") == 0) %>%
filter(str_count(SMILES, "As") == 0) %>%
filter(str_count(SMILES, "Al") == 0) %>%
filter(str_count(SMILES, "B") == 0) %>%
filter(str_count(SMILES, "Si") == 0) %>%
filter(str_count(SMILES, "Se") == 0) %>%
filter(str_count(SMILES, "Mg") == 0) %>%
filter(str_count(SMILES, "Na") == 0) %>%
filter(str_count(SMILES, "K") == 0) %>%
filter(str_count(SMILES, "Li") == 0) %>%
filter(str_count(SMILES, "Ca") == 0)
return(datarow)
}
pubchem_fingerprint_initial = function(smiles) {
mol2 <- parse.smiles(smiles)[[1]]
pubchem_fingerprints <- get.fingerprint(mol2,
type = "pubchem")
table <- as.data.frame(pubchem_fingerprints@bits) %>%
mutate(fp = 1) %>%
mutate(fp = as.numeric(fp))
table = table %>%
rename("row" = `pubchem_fingerprints@bits`)
suppressMessages(
datarow <- list %>%
left_join(table) %>%
select(-row)
)
datarow = datarow %>%
mutate(fp = case_when(
is.na(fp) ~ 0,
TRUE ~ fp)) %>%
rename(SMILES = description_PC) %>%
filter(row_number() > 263) %>%
mutate(SMILES = str_remove_all(SMILES, "~")) %>%
filter(str_count(SMILES, "-\\[#1\\]") == 0) %>%
filter(str_count(SMILES, "\\[#1\\]-") == 0) %>%
filter(str_count(SMILES, "-H") == 0) %>%
filter(str_count(SMILES, "\\[H\\]") == 0) %>%
filter(str_count(SMILES, "\\(H\\)") == 0) %>%
filter(str_count(SMILES, "As") == 0) %>%
filter(str_count(SMILES, "Al") == 0) %>%
filter(str_count(SMILES, "B") == 0) %>%
filter(str_count(SMILES, "Si") == 0) %>%
filter(str_count(SMILES, "Se") == 0) %>%
filter(str_count(SMILES, "Mg") == 0) %>%
filter(str_count(SMILES, "Na") == 0) %>%
filter(str_count(SMILES, "K") == 0) %>%
filter(str_count(SMILES, "Li") == 0) %>%
filter(str_count(SMILES, "Ca") == 0) %>%
group_by(SMILES) %>%
mutate(MW_fingerprint = molecularmass(SMILES)) %>%
ungroup()
return(datarow)
}
dataset =
pubchem_fingerprint(dataset$SMILES)
dataset = pubchem_fingerprint(dataset$SMILES)
View(dataset)
pubchem_fingerprint_initial = function(smiles) {
mol2 <- parse.smiles(smiles)[[1]]
pubchem_fingerprints <- get.fingerprint(mol2,
type = "pubchem")
table <- as.data.frame(pubchem_fingerprints@bits) %>%
mutate(fp = 1) %>%
mutate(fp = as.numeric(fp))
table = table %>%
rename("row" = `pubchem_fingerprints@bits`)
suppressMessages(
datarow <- list %>%
left_join(table) %>%
select(-row)
)
datarow = datarow %>%
mutate(fp = case_when(
is.na(fp) ~ 0,
TRUE ~ fp)) %>%
rename(SMILES = description_PC) %>%
filter(row_number() > 263) %>%
mutate(SMILES = str_remove_all(SMILES, "~")) %>%
filter(str_count(SMILES, "-\\[#1\\]") == 0) %>%
filter(str_count(SMILES, "\\[#1\\]-") == 0) %>%
filter(str_count(SMILES, "-H") == 0) %>%
filter(str_count(SMILES, "\\[H\\]") == 0) %>%
filter(str_count(SMILES, "\\(H\\)") == 0) %>%
filter(str_count(SMILES, "As") == 0) %>%
filter(str_count(SMILES, "Al") == 0) %>%
filter(str_count(SMILES, "B") == 0) %>%
filter(str_count(SMILES, "Si") == 0) %>%
filter(str_count(SMILES, "Se") == 0) %>%
filter(str_count(SMILES, "Mg") == 0) %>%
filter(str_count(SMILES, "Na") == 0) %>%
filter(str_count(SMILES, "K") == 0) %>%
filter(str_count(SMILES, "Li") == 0) %>%
filter(str_count(SMILES, "Ca") == 0) %>%
group_by(SMILES) %>%
mutate(MW_fingerprint = molecularmass(SMILES)) %>%
ungroup()
return(datarow)
}
dataset = pubchem_fingerprint_initial(dataset$SMILES)
suppressMessages(
list <- read_delim("C:/Users/annel/OneDrive - Kruvelab/RapToxMix/data_csv for coding/CalculatedFingerprints/pubchem_fingerprints_names.txt", delim = ",") %>%
mutate(row = as.numeric(rowPC)) %>%
select(row, description_PC)
)
View(list)
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/adduct_formation/data/NORMAN")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation/data/NORMAN")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation/data/NORMAN")
NORMAN = read_delim("susdat_2019-12-06-112040.csv",
delim = ",",
col_names = TRUE) %>%
rename(PubChemCID = PubChem_CID,
CAS = `CAS_RN Dashboard`)
adducts_summary_NORMAN = read_delim("PubChem_fingerprints_bond_properties_NORMAN.csv",
delim = ",",
col_names = TRUE) %>%
na.omit()
View(adducts_summary_NORMAN)
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/adduct_formation/data/training")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation/data/training")
setwd("C:/Users/annel/OneDrive - Kruvelab/Kruvelab/computational/IE mudeli script ja failid/GitHub/adduct_formation/data/training")
classifier_svmPoly = readRDS("classifier_svmPoly.rds")
NORMAN_pred = adducts_summary_NORMAN  %>%
mutate(M_Na_pred = predict(classifier_svmPoly, newdata = adducts_summary_NORMAN, type = "prob")[,2])
View(adducts_summary_NORMAN)
dataset = tibble(SMILES = c("ccccccN"))
bond_descriptors(dataset)
bond_descriptors(dataset$SMILES)
Vectorize(bond_descriptors)
dataset = dataset %>%
(test = bond_descriptors(SMILES)$min_dist_2O)
dataset = dataset %>%
(test = bond_descriptors(SMILES)$min_dist_2O)
dataset = tibble(SMILES = c("ccccccN"))
dataset = dataset %>%
(test = bond_descriptors(SMILES)$min_dist_2O)
View(dataset)
dataset = dataset %>%
mutate(test = bond_descriptors(SMILES)$min_dist_2O)
View(test)
View(dataset)
dataset = tibble(SMILES = c("ccccccN"))
dataste = dataset %>%
mutate(across(.cols = SMILES, .fns = bond_descriptors(), .names = "{col}"))
dataset = tibble(SMILES = c("ccccccN"))
dataset = dataset %>%
mutate(min_dist_2O = bond_descriptors(SMILES)$min_dist_2O,
max_dist_2O = bond_descriptors(SMILES)$max_dist_2O,
min_dist_carbonyl = bond_descriptors(SMILES)$min_dist_carbonyl,
max_dist_carbonyl = bond_descriptors(SMILES)$max_dist_carbonyl,
max_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_carbonyl,
min_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_carbonyl,
max_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_2O,
min_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_2O)
View(dataset)
dataset = tibble(SMILES = c("ccccccN", "OcccOccc"))
dataset = dataset %>%
mutate(min_dist_2O = bond_descriptors(SMILES)$min_dist_2O,
max_dist_2O = bond_descriptors(SMILES)$max_dist_2O,
min_dist_carbonyl = bond_descriptors(SMILES)$min_dist_carbonyl,
max_dist_carbonyl = bond_descriptors(SMILES)$max_dist_carbonyl,
max_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_carbonyl,
min_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_carbonyl,
max_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_2O,
min_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_2O)
View(dataset)
dataset = tibble(SMILES = c("ccccccN", "OcccOccc"))
dataset = dataset %>%
group_by(SMILES) %>%
mutate(min_dist_2O = bond_descriptors(SMILES)$min_dist_2O,
max_dist_2O = bond_descriptors(SMILES)$max_dist_2O,
min_dist_carbonyl = bond_descriptors(SMILES)$min_dist_carbonyl,
max_dist_carbonyl = bond_descriptors(SMILES)$max_dist_carbonyl,
max_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_carbonyl,
min_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_carbonyl,
max_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_2O,
min_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_2O) %>%
ungroup()
dataset = tibble(SMILES = c("ccccccN", "Occc(O)ccc"))
dataset = dataset %>%
group_by(SMILES) %>%
mutate(min_dist_2O = bond_descriptors(SMILES)$min_dist_2O,
max_dist_2O = bond_descriptors(SMILES)$max_dist_2O,
min_dist_carbonyl = bond_descriptors(SMILES)$min_dist_carbonyl,
max_dist_carbonyl = bond_descriptors(SMILES)$max_dist_carbonyl,
max_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_carbonyl,
min_path_non_rotatabale_bonds_carbonyl = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_carbonyl,
max_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$max_path_non_rotatabale_bonds_2O,
min_path_non_rotatabale_bonds_2O = bond_descriptors(SMILES)$min_path_non_rotatabale_bonds_2O) %>%
ungroup()
View(dataset)
smiles = "ccccccN"
mol2 <- parse.smiles(smiles)[[1]]
pubchem_fingerprints <- get.fingerprint(mol2,
type = "pubchem")
View(pubchem_fingerprints)
table <- as.data.frame(pubchem_fingerprints@bits) %>%
mutate(fp = 1) %>%
mutate(fp = as.numeric(fp))
table = table %>%
rename("row" = `pubchem_fingerprints@bits`)
View(table)
suppressMessages(
datarow <- list %>%
left_join(table) %>%
select(-row)
)
View(datarow)
datarow = datarow %>%
mutate(fp = case_when(
is.na(fp) ~ 0,
TRUE ~ fp))
View(datarow)
mol2 <- parse.smiles(smiles)[[1]]
pubchem_fingerprints <- get.fingerprint(mol2,
type = "pubchem")
table <- as.data.frame(pubchem_fingerprints@bits) %>%
mutate(fp = 1) %>%
mutate(fp = as.numeric(fp))
table = table %>%
rename("row" = `pubchem_fingerprints@bits`)
suppressMessages(
datarow <- list %>%
left_join(table) %>%
select(-row)
)
datarow = datarow %>%
mutate(fp = case_when(
is.na(fp) ~ 0,
TRUE ~ fp))
View(datarow)
